FROM nvidia/cuda:11.8.0-cudnn8-devel-ubuntu22.04
ARG DEBIAN_FRONTEND=noninteractive

# 设置系统环境和安装依赖
RUN sed -i 's/archive.ubuntu.com/mirrors.aliyun.com/g' /etc/apt/sources.list && \
    sed -i 's/security.ubuntu.com/mirrors.aliyun.com/g' /etc/apt/sources.list && \
    apt-get update && apt-get install -y software-properties-common && \
    DEBIAN_FRONTEND=noninteractive add-apt-repository -y ppa:deadsnakes/ppa && \
    apt-get install --no-install-recommends -y python3.10 python3-pip pipx vim make wget

# 创建并激活虚拟环境
RUN python3 -m venv /opt/venv
ENV PATH="/opt/venv/bin:$PATH"

# 安装和配置Poetry
RUN pip install poetry -i https://pypi.tuna.tsinghua.edu.cn/simple/ && \
    poetry config virtualenvs.create false

# 设置工作目录
WORKDIR /home

# 创建必要的目录结构
COPY /include/

# 下载DGL并准备环境
# RUN cd /home/include/dgl && \
#     wget -c https://data.dgl.ai/wheels/torch-2.3/cu118/dgl-2.4.0%2Bcu118-cp310-cp310-manylinux1_x86_64.whl
COPY ./include/dgl/dgl-2.4.0+cu118-cp310-cp310-manylinux1_x86_64.whl /home/include/dgl/

# 复制USAlign代码并编译
COPY include/USalign /home/include/USalign
RUN cd /home/include/USalign && make

# 复制项目文件并安装依赖
COPY pyproject.toml poetry.lock ./
COPY README.md /home
COPY ./src /home/src
ENV http_proxy=http://127.0.0.1:7897
ENV https_proxy=http://127.0.0.1:7897

RUN poetry install --no-interaction --no-ansi

ENTRYPOINT ["/bin/bash"]